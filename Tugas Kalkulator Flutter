import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Alto(),
    );
  }
}

class Alto extends StatefulWidget {
  const Alto({super.key});

  @override
  State<Alto> createState() => _AltoState();
}

class _AltoState extends State<Alto> {
  Widget tombol(String btntxt, Color btncolor, Color txtcolor) {
    return Container(
      child: MaterialButton(
        onPressed: () {
          kalkulasi(btntxt);
        },
        child: Text(
          '$btntxt',
          style: TextStyle(
            fontSize: 30,
            color: txtcolor,
          ),
        ),
        shape: CircleBorder(),
        color: btncolor,
        padding: EdgeInsets.all(15),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color.fromARGB(255, 255, 219, 166),
      appBar: AppBar(
        title: Text(
          "Kalkulator",
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: Color.fromARGB(255, 112, 49, 7),
      ),
      body: Padding(
        padding: EdgeInsets.symmetric(horizontal: 6),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                Padding(
                  padding: EdgeInsets.all(10.0),
                  child: Text(
                    text,
                    textAlign: TextAlign.left,
                    style: TextStyle(color: Colors.black, fontSize: 80),
                  ),
                )
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                tombol('C', Color.fromARGB(255, 37, 19, 2), Colors.white),
                tombol('+/-', Color.fromARGB(255, 37, 19, 2), Colors.white),
                tombol('%', Color.fromARGB(255, 37, 19, 2), Colors.white),
                tombol('/', Color.fromARGB(255, 43, 9, 87), Colors.white),
              ],
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                tombol('7', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('8', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('9', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('x', Color.fromARGB(255, 26, 4, 61), Colors.white),
              ],
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                tombol('4', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('5', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('6', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('-', Color.fromARGB(255, 26, 4, 61), Colors.white),
              ],
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                tombol('1', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('2', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('3', Color.fromARGB(255, 10, 8, 112), Colors.white),
                tombol('+', Color.fromARGB(255, 26, 4, 61), Colors.white),
              ],
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                MaterialButton(
                  padding: EdgeInsets.fromLTRB(24, 15, 120, 15),
                  onPressed: () {},
                  shape: StadiumBorder(),
                  child: Text(
                    "0",
                    style: TextStyle(fontSize: 35, color: Colors.white),
                  ),
                  color: Color.fromARGB(255, 4, 96, 99),
                ),
                tombol('.', Color.fromARGB(255, 89, 90, 4), Colors.white),
                tombol('=', Color.fromARGB(255, 73, 4, 4), Colors.white),
              ],
            ),
            SizedBox(
              height: 10,
            ),
          ],
        ),
      ),
    );
  }

  //Fungsi Hitung kalkulator
  dynamic text = '0';
  double numOne = 0;
  double numTwo = 0;

  dynamic result = '';
  dynamic finalResult = '';
  dynamic opr = '';
  dynamic preOpr = '';
  void kalkulasi(btntxt) {
    if (btntxt == 'C') {
      text = '0';
      numOne = 0;
      numTwo = 0;
      result = '';
      finalResult = '0';
      opr = '';
      preOpr = '';
    } else if (opr == '=' && btntxt == '=') {
      if (preOpr == '+') {
        finalResult = add();
      } else if (preOpr == '-') {
        finalResult = sub();
      } else if (preOpr == 'x') {
        finalResult = mul();
      } else if (preOpr == '/') {
        finalResult = div();
      }
    } else if (btntxt == '+' ||
        btntxt == '-' ||
        btntxt == 'x' ||
        btntxt == '/' ||
        btntxt == '=') {
      if (numOne == 0) {
        numOne = double.parse(result);
      } else {
        numTwo = double.parse(result);
      }
      if (opr == '+') {
        finalResult = add();
      } else if (opr == '-') {
        finalResult = sub();
      } else if (opr == 'x') {
        finalResult = mul();
      } else if (opr == '/') {
        finalResult = div();
      }
      preOpr = opr;
      opr = btntxt;
      result = '';
    } else if (btntxt == '%') {
      result = numOne / 100;
      finalResult = doesContainDecimal(result);
    } else if (btntxt == '.') {
      if (!result.toString().contains('.')) {
        result = result.toString() + '.';
      }
      finalResult = result;
    } else if (btntxt == '+/-') {
      result.toString().startsWith('-')
          ? result = result.toString().substring(1)
          : result = '-' + result.toString();
      finalResult = result;
    } else {
      result = result + btntxt;
      finalResult = result;
    }

    setState(() {
      text = finalResult;
    });
  }

  String add() {
    result = (numOne + numTwo).toString();
    numOne = double.parse(result);
    return doesContainDecimal(result);
  }

  String sub() {
    result = (numOne - numTwo).toString();
    numOne = double.parse(result);
    return doesContainDecimal(result);
  }

  String mul() {
    result = (numOne * numTwo).toString();
    numOne = double.parse(result);
    return doesContainDecimal(result);
  }

  String div() {
    result = (numOne / numTwo).toString();
    numOne = double.parse(result);
    return doesContainDecimal(result);
  }

  String doesContainDecimal(dynamic result) {
    if (result.toString().contains('.')) {
      List<String> splitDecimal = result.toString().split('.');
      if (!(int.parse(splitDecimal[1]) > 0))
        return result = splitDecimal[0].toString();
    }
    return result;
  }
}
